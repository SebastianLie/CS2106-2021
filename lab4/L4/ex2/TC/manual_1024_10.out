Heap size 1024, #Req 10

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 10 integers = 40 bytes
A: Allocated at [0x55ea16311000], request idx [0]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 20 integers = 80 bytes
A: Allocated at [0x55ea16311028], request idx [1]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 30 integers = 120 bytes
A: Allocated at [0x55ea16311078], request idx [2]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 40 integers = 160 bytes
A: Allocated at [0x55ea163110f0], request idx [3]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 50 integers = 200 bytes
A: Allocated at [0x55ea16311190], request idx [4]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 60 integers = 240 bytes
A: Allocated at [0x55ea16311258], request idx [5]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => Existing partitions:
   0 | Addr 0x55ea16311000 | nInt 10
   1 | Addr 0x55ea16311028 | nInt 20
   2 | Addr 0x55ea16311078 | nInt 30
   3 | Addr 0x55ea163110f0 | nInt 40
   4 | Addr 0x55ea16311190 | nInt 50
   5 | Addr 0x55ea16311258 | nInt 60
Free partition <idx> = F: 0x55ea16311258 [S=240]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => Existing partitions:
   0 | Addr 0x55ea16311000 | nInt 10
   1 | Addr 0x55ea16311028 | nInt 20
   2 | Addr 0x55ea16311078 | nInt 30
   3 | Addr 0x55ea163110f0 | nInt 40
   4 | Addr 0x55ea16311190 | nInt 50
Free partition <idx> = F: 0x55ea163110f0 [S=160]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => Existing partitions:
   0 | Addr 0x55ea16311000 | nInt 10
   1 | Addr 0x55ea16311028 | nInt 20
   2 | Addr 0x55ea16311078 | nInt 30
   3 | Addr 0x55ea16311190 | nInt 50
Free partition <idx> = F: 0x55ea16311028 [S=80]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => 
Heap Meta Info:
===============
Total Size = 1024 bytes
Start Address = 0x55ea16311000
Partition list:
[+    0 |    40 bytes | 1]
[+   40 |    80 bytes | 0]
[+  120 |   120 bytes | 1]
[+  240 |   160 bytes | 0]
[+  400 |   200 bytes | 1]
[+  600 |   240 bytes | 0]
[+  840 |   184 bytes | 0]


********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => A: 22 integers = 88 bytes
A: Allocated at [0x55ea163110f0], request idx [3]

********* Menu *********
Allocate= 1 <nInt>  | Deallocate = 2        |
Print Heap Meta = 3 | Print Heap Stat = 4 |
Print Entire Heap = 5 | Exit = 0
Your Choice => *Testing Done. Cleaning up!

Heap Meta Info:
===============
Total Size = 1024 bytes
Start Address = 0x55ea16311000
Partition list:
[+    0 |    40 bytes | 1]
[+   40 |    80 bytes | 0]
[+  120 |   120 bytes | 1]
[+  240 |    88 bytes | 1]
[+  328 |    72 bytes | 0]
[+  400 |   200 bytes | 1]
[+  600 |   240 bytes | 0]
[+  840 |   184 bytes | 0]


Heap Usage Statistics:
======================
Total Space: 1024 bytes
Total Occupied Partitions: 4
	Total Occupied Size: 448 bytes
Total Number of Holes: 4
	Total Hole Size: 576 bytes
